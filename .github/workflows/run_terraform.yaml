# This github action is a manual pipeline that takes a region and environment as input and runs terraform plan and apply.
# It is triggered manually and requires the user to input the region and environment.
# With the region and environment it will run the terraform plan and apply commands on the correct directory .terraform/deployments/${region}/${environment}
# With the region it will also use the correct AWS credentials from github secrets which will be prefixed with the region name (eg: us-east-1_AWS_ACCESS_KEY_ID)

name: Run Terraform

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'eu-west-2'
      environment:
        description: 'Environment (DEV, PROD)'
        required: true
        default: 'DEV'


env:
  AWS_REGION: ${{ github.event.inputs.region }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  # TF_VAR_region: ${{ github.event.inputs.region }}
  # TF_VAR_environment: ${{ github.event.inputs.environment }}
  TF_VAR_aws_access_key_id: ${{ secrets[github.event.inputs.environment | upper | append('_AWS_ACCESS_KEY_ID')] }}
  TF_VAR_aws_secret_access_key: ${{ secrets[github.event.inputs.environment | upper | append('_AWS_SECRET_ACCESS_KEY')] }}
  # AWS_ACCESS_KEY_ID: ${{ secrets[format('{0}_AWS_ACCESS_KEY_ID', github.event.inputs.region)] }}
  # AWS_SECRET_ACCESS_KEY: ${{ secrets[format('{0}_AWS_SECRET_ACCESS_KEY', github.event.inputs.region)] }}
  # AWS_DEFAULT_REGION: ${{ github.event.inputs.region }}
  # TF_VAR_aws_region: ${{ github.event.inputs.region }}


jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets[format('{0}_AWS_ACCESS_KEY_ID', github.event.inputs.environment)] }}
          aws-secret-access-key: ${{ secrets[format('{0}_AWS_SECRET_ACCESS_KEY', github.event.inputs.environment)] }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false
        working-directory: .terraform/deployments/${{ github.event.inputs.region }}/${{ github.event.inputs.environment }}
        env:
          TF_VAR_aws_access_key_id: ${{ secrets[format('{0}_AWS_ACCESS_KEY_ID', github.event.inputs.environment)] }}
          TF_VAR_aws_secret_access_key: ${{ secrets[format('{0}_AWS_SECRET_ACCESS_KEY', github.event.inputs.environment)] }}

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
        working-directory: .terraform/deployments/${{ github.event.inputs.region }}/${{ github.event.inputs.environment }}
